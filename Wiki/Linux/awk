# AWK

awk can edit command outputs and files.

## Basic use:

### Get words from a output:

cat bspwmrc 
```
#! /bin/sh

pgrep -x sxhkd > /dev/null || sxhkd &

bspc monitor -d I II III IV V VI VII VIII IX X

bspc config border_width         2
bspc config window_gap          12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
```
cat bspwmrc | awk '{print $1,$2,$3}' # Returns the three first words of each line.
```
#! /bin/sh 
  
pgrep -x sxhkd
  
bspc monitor -d
  
bspc config border_width
bspc config window_gap
  
bspc config split_ratio
bspc config borderless_monocle
bspc config gapless_monocle
  
bspc rule -a
bspc rule -a
bspc rule -a
bspc rule -a
bspc rule -a
```

Another example:
```
kali@kali:/tmp$ date
Tue 20 Oct 2020 10:49:20 AM CEST
kali@kali:/tmp$ date | awk '{print $3,$2,$4}'
Oct 20 2020
kali@kali:/tmp$ date | awk 'OFS="/" {print $3,$2,$4}'
Oct/20/2020
kali@kali:/tmp$ date | awk 'OFS="~" {print $3,$2,$4}'
Oct~20~2020

```
### Insert something at the begining (with BEGIN)

```
kali@kali:/tmp$ date | awk 'BEGIN {print "Current Date"} {print $3,$2,$4}'
Current Date
Oct 20 2020
```

```
kali@kali:/tmp$ cat bspwmrc | awk 'BEGIN {print "FIRST WORDS"} {print $1,$2,$3}'
FIRST WORDS
#! /bin/sh 
  
pgrep -x sxhkd
  
bspc monitor -d
  
bspc config border_width
bspc config window_gap
  
bspc config split_ratio
bspc config borderless_monocle
bspc config gapless_monocle
  
bspc rule -a
bspc rule -a
bspc rule -a
bspc rule -a
bspc rule -a
```

### Setting the separator (with -F)
```
kali@kali:/tmp$ awk -F: '{print $1,$6}' /etc/passwd
root /root
daemon /usr/sbin
bin /bin
sys /dev
sync /bin
games /usr/games
man /var/cache/man
lp /var/spool/lpd
mail /var/mail
news /var/spool/news
uucp /var/spool/uucp
```

### Using conditionals
```
kali@kali:/tmp$ awk -F: '$3==0 {print $1,$6}' /etc/passwd
root /root

kali@kali:/tmp$ awk -F: '$3<100 {print $1,$3}' /etc/passwd
root 0
daemon 1
bin 2
sys 3
sync 4
games 5
man 6
lp 7
mail 8
news 9
uucp 10
proxy 13
www-data 33
backup 34
list 38
irc 39
gnats 41
```

### Finding using patterns

Put the pattern between slashes.
```
kali@kali:/tmp$ awk -F: '/bash/ {print $0}' /etc/passwd
root:x:0:0:root:/root:/bin/bash
postgres:x:120:125:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash
kali:x:1000:1000:kali,,,:/home/kali:/bin/bash
```


## Sources:
https://www.howtogeek.com/562941/how-to-use-the-awk-command-on-linux/